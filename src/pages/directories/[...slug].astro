---
import Layout from '@/layouts/Layout.astro';
import Header from '@/composites/Header.astro';
import Markdown from '@/composites/Markdown';
import Button from '@/components/Button';
import Card from '@/components/Card';
import VerticalBreadcrumbs from '@/components/VerticalBreadcrumbs';
import WidthLimiter from '@/components/WidthLimiter.astro';
import {
  getParentPath,
  isChildPath,
  getAllArticles,
  getAllDirectories,
  createBreadcrumbs,
} from '@/utils/pathUtil';
import type { Article, Directory } from '@/types/file';

export async function getStaticPaths() {
  const allDirectories = getAllDirectories();
  const allArticles = getAllArticles();
  return allDirectories.map(({ path, title, Content, rawContent }) => ({
    params: {
      slug: path
    },
    props: {
      pathNode: {
        path,
        parentPath: getParentPath(path),
      },
      directory: {
        title,
        Content,
        rawContent,
      },
      allDirectories,
      allArticles,
    },
  }));
}

const { pathNode, directory, allDirectories, allArticles } = Astro.props;
const childDirectories = allDirectories.filter((currentDirectory: Directory) => isChildPath(pathNode.path, currentDirectory.path ?? ''));
const childArticles = allArticles.filter((currentArticle: Article) => isChildPath(pathNode.path, currentArticle.path));
const breadcrumbs = createBreadcrumbs(pathNode.path)
---

<Layout title='Welcome to Astro.'>
  <Header />
  <WidthLimiter>
    <VerticalBreadcrumbs
      basePath='/directories'
      breadcrumbs={breadcrumbs}
    />
    <section>
      <Button
        onClick='/home'
        client:visible
      >
        Go home
      </Button>
      {pathNode.path ? (
        <Button
          onClick={`/directories/${pathNode.parentPath}`}
          client:visible
        >
          Go to parent directory
        </Button>
      ) : <></>}

      <h2 class='mt-8'>{directory.title}</h2>
      <p>/{pathNode.path}</p>
      <Card>
        <Markdown
          rawContent={directory.rawContent}
          client:load
        />
      </Card>
      
      <h3 class='mt-8'>Child directories:</h3>
      <ol>
        {childDirectories.map((childDirectory: Directory) => (
          <li>
            <a href=`/directories/${childDirectory.path}`>{childDirectory.title}</a>
          </li>
        ))}
      </ol>
  
      <h3 class='mt-8'>Child articles:</h3>
      <ol>
        {childArticles.map((childArticle: Article) => (
          <li>
            <a href=`/articles/${childArticle.path}`>{childArticle.title}</a>
          </li>
        ))}
      </ol>
    </section>
  </WidthLimiter>
</Layout>
